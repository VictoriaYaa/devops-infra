name: 'terraform-plan-infra'

on:
  push:
    branches:
    - eks_branch
    - alb_branch

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Process for Branches'
    runs-on: ubuntu-latest
    

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Check AWS credentials 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init

    
    # Validate the configuration files
    - name: Terraform Validate
      run: terraform validate

    - name: Validate failed
      if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
      run: echo "terraform validate failed"

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan 

    # Install kubectl
    - name: Install Kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install
        
    - name: Update Kube Config
      run: aws eks update-kubeconfig --name NEW-vic-eks --region us-east-1

    - name: Check the Kubectl Output
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        

        curl -o iam.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam.json
        aws iam create-policy \
            --policy-name AWSLoadBalancerControllerIAMPolicy \
            --policy-document file://iam.json

        eksctl create iamserviceaccount \
            --cluster="NEW-vic-eks" \
            --namespace=default \
            --name=aws-load-balancer-controller \
            --attach-policy-arn="arn:aws:iam::457398059321:policy/AWSLoadBalancerControllerIAMPolicy" \
            --override-existing-serviceaccounts \
            --approve

        
        kubectl delete pod aws-lb-controller-6f47fc54f4-kv6zc aws-load-balancer-controller-99fb4b684-bq7t9 counter-service-6f94c5656f-smbg4 aws-load-balancer-webhook-service    
        kubectl apply -f kube-ingress.yml
        kubectl apply -f serviceaccount.yml
        kubectl apply -f kube-service.yaml
        kubectl apply -f v2_0_0_full.yml

        echo "kubectl get all -n default"
        kubectl get all -n default

        echo "kubectl get nodes -o wide"
        kubectl get nodes -o wide

        echo "kubectl get pods -o wide"
        kubectl get pods -o wide

        echo "kubectl get svc"
        kubectl get svc
        kubectl get ingress


        