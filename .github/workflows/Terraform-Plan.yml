name: 'terraform-plan-infra'

on:
  push:
    branches:
    - alb-controller_branch

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Process for Branches'
    runs-on: ubuntu-latest
    

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Check AWS credentials 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init

    
    # Validate the configuration files
    - name: Terraform Validate
      run: terraform validate

    - name: Validate failed
      if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
      run: echo "terraform validate failed"

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan 

    # Install kubectl
    - name: Install Kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install
        
    - name: Update Kube Config
      run: aws eks update-kubeconfig --name NEW-vic-eks --region us-east-1

    - name: Check the Kubectl Output
      run: |
        echo "CURL"
        curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.1/docs/install/iam_policy.json
        
        detach-role-policy \
            --role-name AmazonEKSLoadBalancerControllerRole \
            --policy-arn arn:aws:iam::476285196763:policy/AWSLoadBalancerControllerIAMPolicy

        aws iam delete-policy \
            --policy-arn arn:aws:iam::476285196763:policy/AWSLoadBalancerControllerIAMPolicy
        

        aws iam create-policy \
            --policy-name AWSLoadBalancerControllerIAMPolicy \
            --policy-document file://iam_policy.json
        
        kubectl apply \
            --validate=false \
            -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml


        curl -Lo v2_4_1_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.1/v2_4_1_full.yaml
        sed -i.bak -e 's|your-cluster-name|NEW-vic-eks|' ./v2_4_1_full.yaml

        kubectl apply -f v2_4_1_full.yaml
        kubectl get deployment -n kube-system aws-load-balancer-controller

        # echo "kubectl get pods -n kube-system"
        # kubectl get pods -n kube-system

        # echo "kubectl get all"
        # kubectl get all

        # echo "kubectl get nodes -o wide"
        # kubectl get nodes -o wide

        # echo "kubectl get pods -o wide"
        # kubectl get pods -o wide

        # echo "kubectl get svc"
        # kubectl get svc